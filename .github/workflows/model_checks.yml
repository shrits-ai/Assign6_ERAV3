name: Model Architecture Checks

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision
        
    - name: Run architecture checks
      run: |
        python -c "
        import torch
        import torch.nn as nn
        from model import Net
        
        def test_parameter_count():
            model = Net()
            total_params = sum(p.numel() for p in model.parameters())
            assert total_params < 20000, f'Model has {total_params} parameters, should be less than 20000'
            print(f'✓ Parameter count check passed: {total_params} parameters')
        
        def test_batch_norm():
            model = Net()
            has_bn = any(isinstance(m, nn.BatchNorm2d) for m in model.modules())
            assert has_bn, 'Model should use Batch Normalization'
            print('✓ Batch Normalization check passed')
        
        def test_dropout():
            model = Net()
            has_dropout = any(isinstance(m, nn.Dropout) for m in model.modules())
            assert has_dropout, 'Model should use Dropout'
            print('✓ Dropout check passed')
        
        def test_fc_layer():
            model = Net()
            has_fc = any(isinstance(m, nn.Linear) for m in model.modules())
            assert has_fc, 'Model should have at least one Fully Connected layer'
            print('✓ Fully Connected layer check passed')
        
        if __name__ == '__main__':
            print('Running architecture checks...')
            test_parameter_count()
            test_batch_norm()
            test_dropout()
            test_fc_layer()
            print('All checks passed! ✨')
        " 